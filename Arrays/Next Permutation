//TC: O(n)
//SC: O(1)

class Solution {
    public void nextPermutation(int[] nums) {
         int n = nums.length;
        if (n <= 1) {
            return;
        }
    int i;
        for( i = n-2; i>=0;i--){
            if(nums[i]<nums[i+1]){
                break;
            }
        }
        if(i>=0){
        for(int j=n-1; j>i;j--){
            if(nums[i]<nums[j]){
                swap(nums,i,j);
                break;
            }
        }
        }

        reverse(nums,i+1,n-1);
    }

    public void swap(int[] nums, int i, int j){
        int temp=nums[i];
        nums[i]=nums[j];
        nums[j]=temp;
    }

    public void reverse(int[] nums, int a, int b){
        while(a<b){
            swap(nums, a,b);
            a++;
            b--;
        }    }
}
